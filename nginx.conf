worker_processes  1;
error_log logs/error.log info;
events {
    worker_connections 1024;
}
http {
    lua_package_path "/usr/local/openresty/nginx/jwt-lua/lib/?.lua;;";
    server {
        listen 80;
        default_type text/plain;
	set $uid '';	


        location = / {
            content_by_lua '
                local cjson = require "cjson"
                local jwt = require "resty.jwt"

                local jwt_token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9" ..
                    ".eyJmb28iOiJiYXIifQ" ..
                    ".VAoRL1IU0nOguxURF2ZcKR0SGKE1gCbqwyh8u2MLAyY"
                local jwt_obj = jwt:verify("lua-resty-jwt", jwt_token)
                ngx.say(cjson.encode(jwt_obj))
            ';
        }
        location = /sign {
            content_by_lua '
                local cjson = require "cjson"
                local jwt = require "resty.jwt"

                local jwt_token = jwt:sign(
                    "lua-resty-jwt",
                    {
                        header={typ="JWT", alg="HS256"},
                        payload={foo="bar",uid=1}
                    }
                )
                ngx.say(jwt_token)
            ';
        }
	location /check-jwt {
	    default_type text/plain;
	    access_by_lua_block {
		local obj = require('resty.nginx-jwt')
		obj.auth()
	    }
	    proxy_set_header uid $uid;
	    proxy_pass "http://www.baidu.com/";
	}

	location /testURI {
	   content_by_lua_file /etc/nginx/conf.d/testURI.lua;
	}

	location = /redis {
	    set_unescape_uri $key $arg_key;
	    redis2_query get $key;
	    redis2_pass 172.17.0.3:6379;
	}

	location ~ ^/app/.* {
	    resolver 114.114.114.114;
	    set $target '';
	    default_type "text/html";
	    access_by_lua_block {
		local rds_key = "app1"
		local res = ngx.location.capture('/redis', { args = {key = rds_key}})
		local parser = require 'redis.parser'
		local res, typ = parser.parse_reply(res.body)
		ngx.var.target = res
	    }
	    proxy_pass "http://$target";
	}

    }
}